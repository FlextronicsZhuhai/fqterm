find_package(OpenSSL REQUIRED)

#ADD_DEFINITIONS(-DUSE_DOTNET_STYLE)
ADD_DEFINITIONS(-D "FQTERM_VERSION_STRING=\\\"${FQTERM_VERSION}\\\"")

if(FQTERM_USE_STATIC_QT)
  message("Will use static Qt.")
  ADD_DEFINITIONS(-DFQTERM_USE_STATIC_QT)
  REMOVE_DEFINITIONS(-DQT_DLL)
endif(FQTERM_USE_STATIC_QT)

add_subdirectory(src)

set(fqterm_RCS
  fqterm.rc    
)

include_directories(
  ${QT_INCLUDE_DIR}
  ${QT_QTCORE_INCLUDE_DIR}
  ${QT_QTGUI_INCLUDE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/src/common
  ${CMAKE_CURRENT_SOURCE_DIR}/src/protocol
  ${CMAKE_CURRENT_SOURCE_DIR}/src/terminal
  ${CMAKE_CURRENT_SOURCE_DIR}/src/utilities
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ui
  ${CMAKE_CURRENT_SOURCE_DIR}/src/unite
)

link_directories(
  ${QT_PLUGINS_DIR}/codecs
  ${QT_PLUGINS_DIR}/imageformats
)

ADD_EXECUTABLE(fqterm
  src/fqterm/main.cpp
)

if(FQTERM_USE_STATIC_QT)
  if (QT_VERSION_MINOR LESS 8)
    message("Qt<4.8")
    set(FQ_QT_STATIC_PLUGINS
      qcncodecs qjpcodecs qkrcodecs qtwcodecs
      qjpeg qgif qmng
    )
  endif(QT_VERSION_MINOR LESS 8)
endif(FQTERM_USE_STATIC_QT)

target_link_libraries(fqterm 
  fqterm_main
  fqterm_terminal
  fqterm_protocol
  fqterm_utilities
  fqterm_ui
  fqterm_common
  fqterm_unite
  ${QT_QTNETWORK_LIBRARIES}
  ${QT_QTXML_LIBRARIES}
  ${QT_QTSCRIPT_LIBRARIES}  
  ${FQ_QT_STATIC_PLUGINS}
  ${QT_LIBRARIES}
  ${OPENSSL_LIBRARIES}
  ${PYTHON_LIB}
  crypto
  jpeg
  lzma
  lcms2
)

add_dependencies(fqterm
  fqterm_main
  fqterm_common
  fqterm_terminal
  fqterm_protocol
  fqterm_ui
  fqterm_unite
  fqterm_utilities
  fqterm_unite
)
